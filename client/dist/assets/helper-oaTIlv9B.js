import{i as t,_ as n}from"./index-JMqGIfVs.js";async function u({username:s}){try{const{data:r}=await t.get(`/user/${s}`);return{data:r}}catch{return{error:"Password doesn't Match...!"}}}async function l(s){try{const{data:{msg:r},status:e}=await t.post("/register",s),{username:o,email:a}=s;return e===200&&(console.log('user registered Status "200"'),await t.post("/registerMail",{username:o,userEmail:a,text:r})),Promise.resolve(r)}catch(r){return n.error(r.response.data.message),Promise.reject({error:r})}}async function g(s){try{const{data:{msg:r},status:e}=await t.post("/admin/register",s),{name:o,email:a}=s;return e===200&&(console.log("ok"),await t.post("/registerMail",{name:o,userEmail:a,text:r})),Promise.resolve(r)}catch(r){return Promise.reject({error:r})}}async function P({email:s,password:r}){try{if(s){const{data:e}=await t.post("/admin/login",{email:s,password:r});return Promise.resolve({data:e})}}catch{return Promise.reject({error:"Password doesn't Match...! "})}}async function m({username:s,password:r}){try{if(s){const{data:e}=await t.post("/login",{username:s,password:r});return console.log("login verifyPassword:",e),{success:!0,data:e}}}catch(e){return console.log(e.response),e.response&&e.response.data.message==="user is not verified"?{verified:!1}:(n.error(e.response.data.message),{error:"Password doesn't Match...! "})}}async function f(s){console.log("generateOTP called",s);try{const{data:{code:r},status:e}=await t.get("/generateOTP",{params:{username:s}});if(e===201){const{data:{email:o}}=await u({username:s}),a=`Your Password Recovery OTP is ${r}. Verify and recover your password.`;await t.post("/registerMail",{username:s,userEmail:o,text:a,subject:"Password Recovery OTP"})}return Promise.resolve(r)}catch(r){return Promise.reject({error:r})}}async function w({username:s,code:r}){try{console.log("verifyOTP helper:",s,r);const{data:e,status:o}=await t.get("/verifyOTP",{params:{username:s,code:r}});return console.log(e),{data:e,status:o}}catch(e){return console.error("An error occurred while verifying OTP:",e),Promise.reject(e)}}async function y({username:s,password:r}){var e,o;try{const{data:{msg:a,email:i},status:c}=await t.put("/resetPassword",{username:s,password:r});return c===200&&(console.log('User password reset successful with status "200"'),await t.post("/registerMail",{username:s,userEmail:i,text:a})),Promise.resolve({data:{msg:a,email:i},status:c})}catch(a){const i=((o=(e=a.response)==null?void 0:e.data)==null?void 0:o.message)||"An unexpected error occurred.";return n.error(i),Promise.reject({error:a})}}export{m as a,l as b,P as c,g as d,f as g,y as r,w as v};
